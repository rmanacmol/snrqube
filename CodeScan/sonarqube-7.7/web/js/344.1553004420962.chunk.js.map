{"version":3,"sources":["webpack:///./src/main/js/apps/projectQualityGate/Header.tsx","webpack:///./src/main/js/apps/projectQualityGate/Form.tsx","webpack:///./src/main/js/apps/projectQualityGate/App.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/app/utils/handleRequiredAuthorization.ts"],"names":["Header","index_js_exposed","className","Object","l10n","DocTooltip","doc","Promise","resolve","then","__webpack_require__","t","bind","_super","Form","_this","apply","this","arguments","mounted","state","loading","stopLoading","setState","handleChange","option","gate","props","isSet","value","isUnset","isChanged","id","Number","onChange","renderGateName","isDefault","label","__extends","prototype","componentDidMount","componentWillUnmount","renderSelect","_a","options","allGates","map","String","name","Select","clearable","disabled","optionRenderer","style","width","valueRenderer","render","App_App","App","handleChangeGate","oldId","newId","component","requestData","gateId","organization","projectKey","key","quality_gates","addGlobalSuccessMessage","newGate","find","onComponentChange","qualityGate","undefined","App_extends","checkPermissions","fetchQualityGates","handleRequiredAuthorization","configuration","showQualityGates","all","project","qualitygates","Suggestions","suggestions","Helmet_default","a","title","projectQualityGate_Form","d","__webpack_exports__","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","message","dispatch","_getHistory__WEBPACK_IMPORTED_MODULE_1__","_store_appState__WEBPACK_IMPORTED_MODULE_2__","store","history","returnTo","window","location","pathname","search","hash","replace","query","return_to"],"mappings":"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","file":"js/344.1553004420962.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DocTooltip from '../../components/docs/DocTooltip';\nimport { translate } from '../../helpers/l10n';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <div className=\"page-title display-flex-center\">\n        <h1>{translate('project_quality_gate.page')}</h1>\n        <DocTooltip\n          className=\"spacer-left\"\n          doc={import(/* webpackMode: \"eager\" */ 'Docs/tooltips/quality-gates/quality-gate-projects.md')}\n        />\n      </div>\n      <div className=\"page-description\">{translate('project_quality_gate.page.description')}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from '../../components/controls/Select';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  allGates: T.QualityGate[];\n  gate?: T.QualityGate;\n  onChange: (oldGate?: number, newGate?: number) => Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\ninterface Option {\n  isDefault?: boolean;\n  label: string;\n  value: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleChange = (option: { value: string }) => {\n    const { gate } = this.props;\n\n    const isSet = gate == null && option.value != null;\n    const isUnset = gate != null && option.value == null;\n    const isChanged = gate != null && gate.id !== Number(option.value);\n    const hasChanged = isSet || isUnset || isChanged;\n\n    if (hasChanged) {\n      this.setState({ loading: true });\n      this.props\n        .onChange(gate && gate.id, Number(option.value))\n        .then(this.stopLoading, this.stopLoading);\n    }\n  };\n\n  renderGateName = (option: { isDefault?: boolean; label: string }) => {\n    if (option.isDefault) {\n      return (\n        <span>\n          <strong>{translate('default')}</strong>\n          {': '}\n          {option.label}\n        </span>\n      );\n    }\n\n    return <span>{option.label}</span>;\n  };\n\n  renderSelect() {\n    const { gate, allGates } = this.props;\n\n    const options: Option[] = allGates.map(gate => ({\n      value: String(gate.id),\n      label: gate.name,\n      isDefault: gate.isDefault\n    }));\n\n    return (\n      <Select\n        clearable={false}\n        disabled={this.state.loading}\n        onChange={this.handleChange}\n        optionRenderer={this.renderGateName}\n        options={options}\n        style={{ width: 300 }}\n        value={gate && String(gate.id)}\n        valueRenderer={this.renderGateName}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSelect()}\n        {this.state.loading && <i className=\"spinner spacer-left\" />}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport Form from './Form';\nimport {\n  fetchQualityGates,\n  getGateForProject,\n  associateGateWithProject,\n  dissociateGateWithProject\n} from '../../api/quality-gates';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport handleRequiredAuthorization from '../../app/utils/handleRequiredAuthorization';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: T.Component;\n  onComponentChange: (changes: {}) => void;\n}\n\ninterface State {\n  allGates?: T.QualityGate[];\n  gate?: T.QualityGate;\n  loading: boolean;\n}\n\nexport default class App extends React.PureComponent<Props> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.checkPermissions()) {\n      this.fetchQualityGates();\n    } else {\n      handleRequiredAuthorization();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  checkPermissions() {\n    const { configuration } = this.props.component;\n    const hasPermission = configuration && configuration.showQualityGates;\n    return !!hasPermission;\n  }\n\n  fetchQualityGates() {\n    const { component } = this.props;\n    this.setState({ loading: true });\n    Promise.all([\n      fetchQualityGates({ organization: component.organization }),\n      getGateForProject({ organization: component.organization, project: component.key })\n    ]).then(\n      ([{ qualitygates: allGates }, gate]) => {\n        if (this.mounted) {\n          this.setState({ allGates, gate, loading: false });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  }\n\n  handleChangeGate = (oldId?: number, newId?: number) => {\n    const { allGates } = this.state;\n    if ((!oldId && !newId) || !allGates) {\n      return Promise.resolve();\n    }\n\n    const { component } = this.props;\n    const requestData = {\n      gateId: newId ? newId : oldId!,\n      organization: component.organization,\n      projectKey: component.key\n    };\n    const request = newId\n      ? associateGateWithProject(requestData)\n      : dissociateGateWithProject(requestData);\n\n    return request.then(() => {\n      if (this.mounted) {\n        addGlobalSuccessMessage(translate('project_quality_gate.successfully_updated'));\n        if (newId) {\n          const newGate = allGates.find(gate => gate.id === newId);\n          if (newGate) {\n            this.setState({ gate: newGate });\n            this.props.onComponentChange({ qualityGate: newGate });\n          }\n        } else {\n          this.setState({ gate: undefined });\n        }\n      }\n    });\n  };\n\n  render() {\n    if (!this.checkPermissions()) {\n      return null;\n    }\n\n    const { allGates, gate, loading } = this.state;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-quality-gate\">\n        <Suggestions suggestions=\"project_quality_gate\" />\n        <Helmet title={translate('project_quality_gate.page')} />\n        <Header />\n        {loading ? (\n          <i className=\"spinner\" />\n        ) : (\n          allGates && <Form allGates={allGates} gate={gate} onChange={this.handleChangeGate} />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport getHistory from './getHistory';\nimport { requireAuthorization } from '../../store/appState';\n\nexport default function handleRequiredAuthorization() {\n  const store = getStore();\n  const history = getHistory();\n\n  const returnTo = window.location.pathname + window.location.search + window.location.hash;\n\n  store.dispatch(requireAuthorization());\n  history.replace({ pathname: '/sessions/new', query: { return_to: returnTo } });\n}\n"],"sourceRoot":""}