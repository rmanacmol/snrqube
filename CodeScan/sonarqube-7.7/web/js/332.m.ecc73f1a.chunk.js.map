{"version":3,"sources":["webpack:///./src/main/js/apps/projectDeletion/Header.tsx","webpack:///./src/main/js/apps/projectDeletion/Form.tsx","webpack:///./src/main/js/apps/projectDeletion/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts"],"names":["Header","props","qualifier","component","description","includes","Object","l10n","index_js_exposed","className","projectDeletion_Form","es","[object Object]","this","handleDelete","isProject","deleteMethod","components","redirectTo","key","then","addGlobalSuccessMessage","name","router","replace","ConfirmButton","confirmButtonText","isDestructive","modalBody","modalHeader","onConfirm","onClick","buttons","id","App","Helmet_default","a","title","__webpack_require__","d","__webpack_exports__","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","mounted","state","submitting","stopSubmitting","setState","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","_a","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","confirmData","renderModalContent","_this$props","confirmDisable","headerDescription","_this$props$cancelBut","cancelButtonText","loading","autoFocus","undefined","disabled","_this$props2","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","message","dispatch"],"mappings":"0IA0Bc,SAAUA,EAAOC,GAAY,MACjCC,EAAcD,EAAME,UAApBD,UACR,IAAIE,EASJ,OAPEA,EADE,CAAC,KAAM,OAAOC,SAASH,GACXI,OAAAC,EAAA,EAAAD,CAAU,uCACD,QAAdJ,EACKI,OAAAC,EAAA,EAAAD,CAAU,yCAEVA,OAAAC,EAAA,EAAAD,CAAU,qCAIxBE,EAAA,wBAAQC,UAAU,eAChBD,EAAA,oBAAIC,UAAU,cAAcH,OAAAC,EAAA,EAAAD,CAAU,kBACtCE,EAAA,qBAAKC,UAAU,oBAAoBL,qDCT1BM,EAAAJ,OAAAK,EAAA,YACb,cAAmBH,EAAA,cAAnBI,kCACEC,KAAAC,aAAe,MAAK,MACVX,EAAcU,KAAKZ,MAAnBE,UACFY,EAAoC,QAAxBZ,EAAUD,UACtBc,EAAeD,EAAYE,EAAA,EAAgBA,EAAA,EAC3CC,EAAaH,EAAY,IAAM,cACrC,OAAOC,EAAab,EAAUgB,KAAKC,KAAK,KACtCd,OAAAe,EAAA,EAAAf,CACEA,OAAAC,EAAA,EAAAD,CAAwB,oCAAqCH,EAAUmB,OAEzET,KAAKZ,MAAMsB,OAAOC,QAAQN,OAI9BN,SAAM,MACIT,EAAcU,KAAKZ,MAAnBE,UACR,OACEK,EAAA,cAACiB,EAAA,EAAa,CACZC,kBAAmBpB,OAAAC,EAAA,EAAAD,CAAU,UAC7BqB,eAAe,EACfC,UAAWtB,OAAAC,EAAA,EAAAD,CACT,gDACAH,EAAUmB,MAEZO,YAAavB,OAAAC,EAAA,EAAAD,CAAU,mBAAoBH,EAAUD,WACrD4B,UAAWjB,KAAKC,cACf,EAAGiB,aACFvB,EAAA,cAACwB,EAAA,EAAM,CAACvB,UAAU,aAAawB,GAAG,iBAAiBF,QAASA,GACzDzB,OAAAC,EAAA,EAAAD,CAAU,eC/BX,SAAU4B,EAAIjC,GAC1B,OACEO,EAAA,qBAAKC,UAAU,qBACbD,EAAA,cAAC2B,EAAAC,EAAM,CAACC,MAAO/B,OAAAC,EAAA,EAAAD,CAAU,mBACzBE,EAAA,cAACR,EAAM,CAACG,UAAWF,EAAME,YACzBK,EAAA,cAACE,EAAI,CAACP,UAAWF,EAAME,aAlC7BmC,EAAAC,EAAAC,EAAA,4BAAAN,sCCAAI,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAmCc,SAAUG,EAAMxC,GAC5B,OACEyC,EAAA,cAACC,EAAUrC,OAAAuC,OAAA,CACTpC,UAAWmC,EAAW,QAAS,CAC7BE,cAA8B,UAAf7C,EAAM8C,KACrBC,eAA+B,WAAf/C,EAAM8C,KACtBE,cAA8B,UAAfhD,EAAM8C,OAEvBG,QAAQ,EACRC,iBAAkBP,EAAW,gBAAiB,CAAEQ,oBAAqBnD,EAAMoD,cACvEpD,IAtBV0C,EAAA,cAAyB,4XCiBX,MAAOW,UAAoBZ,EAAA,UAAzC9B,kCACEC,KAAA0C,SAAU,EACV1C,KAAA2C,MAAe,CAAEC,YAAY,GAU7B5C,KAAA6C,eAAiB,MACX7C,KAAK0C,SACP1C,KAAK8C,SAAS,CAAEF,YAAY,MAIhC5C,KAAA+C,iBAAoBC,KACdA,IACFA,EAAMC,iBACND,EAAME,cAAcC,QAEtBnD,KAAKZ,MAAMgE,YAGbpD,KAAAqD,iBAAoBL,KAClBA,EAAMC,iBACNjD,KAAKsD,WAGPtD,KAAAuD,kBAAqBP,KACfA,IACFA,EAAMC,iBACND,EAAME,cAAcC,QAEtBnD,KAAKsD,WAGPtD,KAAAsD,OAAS,MACP,MAAME,EAASxD,KAAKZ,MAAMqE,WACtBD,IACFxD,KAAK8C,SAAS,CAAEF,YAAY,IAC5BY,EAAOjD,KAAKP,KAAK6C,eAAgB7C,KAAK6C,mBAvC1C9C,oBACEC,KAAK0C,SAAU,EAGjB3C,uBACEC,KAAK0C,SAAU,EAsCjB3C,SACQ,MAAA2D,EAAA1D,KAAAZ,MAAEuE,EAAmCD,EAAnCC,SAAUC,EAAyBF,EAAzBE,OAAQR,EAAiBM,EAAjBN,QAAmBS,GAAFH,EAARD,SAAUK,EAAAJ,EAAA,6CAC7C,OACE7B,EAAA,cAACkC,EAAA,EAAKtE,OAAAuC,OAAA,CAACgC,aAAcJ,EAAQK,eAAgBb,GAAaS,GACvDF,EAAS,CACRO,aAAclE,KAAK+C,iBACnBoB,aAAcnE,KAAKqD,iBACnBe,cAAepE,KAAKuD,kBACpBX,WAAY5C,KAAK2C,MAAMC,kDC/FjCnB,EAAAC,EAAAC,EAAA,sBAAA0C,IAAA,IAAAxC,EAAAJ,EAAA,KAAA6C,EAAA7C,EAAA,KAAA8C,EAAA9C,EAAA,KAAA+C,EAAA/C,EAAA,KAAAgD,EAAAhD,EAAA,GAyCc,MAAO4C,UAAiCxC,EAAA,cAAtD9B,kCACEC,KAAA0C,SAAU,EAUV1C,KAAA0E,aAAe,MACb,MAAMlB,EAASxD,KAAKZ,MAAM6B,UAAUjB,KAAKZ,MAAMuF,aAC/C,OAAInB,EACKA,EAAOjD,KAAKP,KAAKZ,MAAMgE,QAAS,aAEvCpD,KAAKZ,MAAMgE,YAKfpD,KAAA4E,mBAAqB,GAAGV,eAAcC,eAAcvB,iBAA+B,MAAAiC,EAS7E7E,KAAKZ,MAPPuE,EAF+EkB,EAE/ElB,SACA9C,EAH+EgE,EAG/EhE,kBACAiE,EAJ+ED,EAI/EC,eACAlB,EAL+EiB,EAK/EjB,OACAmB,EAN+EF,EAM/EE,kBACAjE,EAP+E+D,EAO/E/D,cAP+EkE,EAAAH,EAQ/EI,wBAR+E,IAAAD,EAQ5DvF,OAAAgF,EAAA,EAAAhF,CAAU,UARkDuF,EAUjF,OACEnD,EAAA,sBAAM4B,SAAUU,GACdtC,EAAA,wBAAQjC,UAAU,cAChBiC,EAAA,wBAAK+B,GACJmB,GAEHlD,EAAA,qBAAKjC,UAAU,cAAc+D,GAC7B9B,EAAA,wBAAQjC,UAAU,cAChBiC,EAAA,cAAC0C,EAAA,EAAe,CAAC3E,UAAU,eAAesF,QAAStC,IACnDf,EAAA,cAAC2C,EAAA,EAAY,CACXW,WAAW,EACXvF,UAAWkB,EAAgB,kBAAesE,EAC1CC,SAAUzC,GAAckC,GACvBjE,GAEHgB,EAAA,cAAC2C,EAAA,EAAe,CAACa,SAAUzC,EAAY1B,QAASgD,GAC7Ce,OA5CXlF,oBACEC,KAAK0C,SAAU,EAGjB3C,uBACEC,KAAK0C,SAAU,EA8CjB3C,SAAM,MAAAuF,EAC0CtF,KAAKZ,MAC7CyE,EAAa,CAAED,OAFjB0B,EACI1B,OACqBR,QAFzBkC,EACYlC,QACsBZ,WAFlC8C,EACqB9C,WACyBN,KAF9CoD,EACiCpD,MAErC,OACEL,EAAA,cAACyC,EAAA,EAAW7E,OAAAuC,OAAA,CAACyB,SAAUzD,KAAK0E,cAAkBb,GAC3C7D,KAAK4E,+YClEA,MAAOhE,UAAyBiB,EAAA,cAA9C9B,kCACEC,KAAAuF,mBAAqB,GAAGnC,cAChB,MAAAM,EAAA1D,KAAAZ,MAEJ2B,GAEsB2C,EAHtBC,SAGsBD,EAFtB3C,WACAC,EACsB0C,EADtB1C,YACAwE,EAAsB9B,EAAtB8B,uBACAC,EAAA3B,EAAAJ,EAAA,iEAEF,OACE7B,EAAA,cAAC6D,EAAA,EAAYjG,OAAAuC,OAAA,CACX4B,OAAQ5C,EACR+D,kBAAmBS,EACnBpC,QAASA,GACLqC,GACH1E,KAKPhB,SACE,OAAO8B,EAAA,cAAC8D,EAAA,EAAW,CAACC,MAAO5F,KAAKuF,oBAAqBvF,KAAKZ,MAAMuE,8CCvDpElC,EAAAC,EAAAC,EAAA,sBAAAkE,IAAA,IAAAhE,EAAAJ,EAAA,KAuCc,MAAOoE,UAAoBhE,EAAA,cAAzC9B,kCACEC,KAAA0C,SAAU,EACV1C,KAAA2C,MAAe,CAAEiD,OAAO,GAUxB5F,KAAA8F,kBAAoB,MAClB9F,KAAK8C,SAAS,CAAE8C,OAAO,MAGzB5F,KAAAqD,iBAAoBL,KACdA,GACFA,EAAMC,iBAERjD,KAAK8C,SAAS,CAAE8C,OAAO,MAGzB5F,KAAA+F,iBAAmB,MACb/F,KAAK0C,SACP1C,KAAK8C,SAAS,CAAE8C,OAAO,MArB3B7F,oBACEC,KAAK0C,SAAU,EAGjB3C,uBACEC,KAAK0C,SAAU,EAoBjB3C,SACE,OACE8B,EAAA,cAAAA,EAAA,cACG7B,KAAKZ,MAAMuE,SAAS,CACnBzC,QAASlB,KAAK8F,kBACd3B,aAAcnE,KAAKqD,mBAEpBrD,KAAK2C,MAAMiD,OAAS5F,KAAKZ,MAAMwG,MAAM,CAAExC,QAASpD,KAAK+F,wDC3E9DtE,EAAAC,EAAAC,EAAA,sBAAAnB,IAAA,IAAAwF,EAAAvE,EAAA,KAAAwE,EAAAxE,EAAA,KAsBc,SAAUjB,EAAwB0F,GAChCzG,OAAAuG,EAAA,QAAAvG,GACR0G,SAASF,EAAA,EAAuCC","file":"js/332.m.ecc73f1a.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'qualifier'>;\n}\n\nexport default function Header(props: Props) {\n  const { qualifier } = props.component;\n  let description: string;\n  if (['VW', 'SVW'].includes(qualifier)) {\n    description = translate('portfolio_deletion.page.description');\n  } else if (qualifier === 'APP') {\n    description = translate('application_deletion.page.description');\n  } else {\n    description = translate('project_deletion.page.description');\n  }\n\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('deletion.page')}</h1>\n      <div className=\"page-description\">{description}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport { deleteProject, deletePortfolio } from '../../api/components';\nimport { Button } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport addGlobalSuccessMessage from '../../app/utils/addGlobalSuccessMessage';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default withRouter(\n  class Form extends React.PureComponent<Props & WithRouterProps> {\n    handleDelete = () => {\n      const { component } = this.props;\n      const isProject = component.qualifier === 'TRK';\n      const deleteMethod = isProject ? deleteProject : deletePortfolio;\n      const redirectTo = isProject ? '/' : '/portfolios';\n      return deleteMethod(component.key).then(() => {\n        addGlobalSuccessMessage(\n          translateWithParameters('project_deletion.resource_deleted', component.name)\n        );\n        this.props.router.replace(redirectTo);\n      });\n    };\n\n    render() {\n      const { component } = this.props;\n      return (\n        <ConfirmButton\n          confirmButtonText={translate('delete')}\n          isDestructive={true}\n          modalBody={translateWithParameters(\n            'project_deletion.delete_resource_confirmation',\n            component.name\n          )}\n          modalHeader={translate('qualifier.delete', component.qualifier)}\n          onConfirm={this.handleDelete}>\n          {({ onClick }) => (\n            <Button className=\"button-red\" id=\"delete-project\" onClick={onClick}>\n              {translate('delete')}\n            </Button>\n          )}\n        </ConfirmButton>\n      );\n    }\n  }\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './Header';\nimport Form from './Form';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name' | 'qualifier'>;\n}\n\nexport default function App(props: Props) {\n  return (\n    <div className=\"page page-limited\">\n      <Helmet title={translate('deletion.page')} />\n      <Header component={props.component} />\n      <Form component={props.component} />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n"],"sourceRoot":""}