{"version":3,"sources":["webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/apps/organizations/actions.ts","webpack:///./src/main/js/apps/organizations/components/OrganizationDelete.tsx"],"names":["__webpack_require__","d","__webpack_exports__","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","props","Object","assign","className","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","[object Object]","this","mounted","state","submitting","stopSubmitting","setState","handleCloseClick","event","preventDefault","currentTarget","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","onSubmit","then","_a","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onFormSubmit","onSubmitClick","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","onConfirm","confirmData","renderModalContent","_this$props","confirmButtonText","confirmDisable","headerDescription","isDestructive","_this$props$cancelBut","cancelButtonText","loading","autoFocus","undefined","disabled","onClick","_this$props2","ConfirmButton","renderConfirmModal","modalBody","modalHeader","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal","addGlobalSuccessMessage","_getStore__WEBPACK_IMPORTED_MODULE_0__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_1__","message","dispatch","updateOrganization","deleteOrganization","_api_organizations__WEBPACK_IMPORTED_MODULE_0__","_store_organizations__WEBPACK_IMPORTED_MODULE_1__","_store_globalMessages__WEBPACK_IMPORTED_MODULE_2__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","key","changes","r","OrganizationDelete","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_controls_ConfirmButton__WEBPACK_IMPORTED_MODULE_2__","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_3__","_actions__WEBPACK_IMPORTED_MODULE_5__","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","_api_organizations__WEBPACK_IMPORTED_MODULE_7__","_helpers_system__WEBPACK_IMPORTED_MODULE_8__","_components_ui_Alert__WEBPACK_IMPORTED_MODULE_9__","_components_hoc_withRouter__WEBPACK_IMPORTED_MODULE_10__","_app_utils_addGlobalSuccessMessage__WEBPACK_IMPORTED_MODULE_11__","verify","fetchOrganizationPlanInfo","organization","billingInfo","hasPaidPlan","subscription","status","handleInput","value","isVerified","toLowerCase","name","onDelete","router","replace","pathname","confirmationMessage","title","variant","htmlFor","id","onChange","type","mapDispatchToProps"],"mappings":"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","file":"js/322.m.8f0071eb.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport getStore from './getStore';\nimport * as globalMessages from '../../store/globalMessages';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport * as api from '../../api/organizations';\nimport * as actions from '../../store/organizations';\nimport { addGlobalSuccessMessage } from '../../store/globalMessages';\nimport { translate } from '../../helpers/l10n';\n\nexport function updateOrganization(key: string, changes: T.OrganizationBase) {\n  return (dispatch: Dispatch<any>) => {\n    return api.updateOrganization(key, changes).then(() => {\n      dispatch(actions.updateOrganization(key, changes));\n      dispatch(addGlobalSuccessMessage(translate('organization.updated')));\n    });\n  };\n}\n\nexport function deleteOrganization(key: string) {\n  return (dispatch: Dispatch<any>) => {\n    return api.deleteOrganization(key).then(() => {\n      dispatch(actions.deleteOrganization(key));\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ConfirmButton from '../../../components/controls/ConfirmButton';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { deleteOrganization } from '../actions';\nimport { Button } from '../../../components/ui/buttons';\nimport { getOrganizationBilling } from '../../../api/organizations';\nimport { isSonarCloud } from '../../../helpers/system';\nimport { Alert } from '../../../components/ui/Alert';\nimport { withRouter, Router } from '../../../components/hoc/withRouter';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\n\ninterface DispatchToProps {\n  deleteOrganization: (key: string) => Promise<void>;\n}\n\ninterface OwnProps {\n  organization: Pick<T.Organization, 'key' | 'name'>;\n  router: Pick<Router, 'replace'>;\n}\n\ntype Props = OwnProps & DispatchToProps;\n\ninterface State {\n  hasPaidPlan?: boolean;\n  verify: string;\n}\n\nexport class OrganizationDelete extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { verify: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchOrganizationPlanInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchOrganizationPlanInfo = () => {\n    if (isSonarCloud()) {\n      getOrganizationBilling(this.props.organization.key).then(\n        billingInfo => {\n          if (this.mounted) {\n            this.setState({\n              hasPaidPlan: billingInfo.subscription.status !== 'inactive'\n            });\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ hasPaidPlan: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ verify: event.currentTarget.value });\n  };\n\n  isVerified = () => {\n    return this.state.verify.toLowerCase() === this.props.organization.name.toLowerCase();\n  };\n\n  onDelete = () => {\n    const { organization } = this.props;\n    return this.props.deleteOrganization(organization.key).then(() => {\n      if (this.state.hasPaidPlan) {\n        this.props.router.replace({\n          pathname: '/feedback/downgrade',\n          state: {\n            confirmationMessage: translateWithParameters(\n              'organization.deleted_x',\n              organization.name\n            ),\n            organization,\n            title: translate('billing.downgrade.reason.title_deleted')\n          }\n        });\n      } else {\n        addGlobalSuccessMessage(translate('organization.deleted'));\n        this.props.router.replace('/');\n      }\n    });\n  };\n\n  render() {\n    const { hasPaidPlan } = this.state;\n    return (\n      <div className=\"boxed-group boxed-group-inner\">\n        <h2 className=\"boxed-title\">{translate('organization.delete')}</h2>\n        <p className=\"big-spacer-bottom width-50\">\n          <InstanceMessage message={translate('organization.delete.description')} />\n        </p>\n        <ConfirmButton\n          confirmButtonText={translate('delete')}\n          confirmDisable={!this.isVerified()}\n          isDestructive={true}\n          modalBody={\n            <div>\n              {hasPaidPlan && (\n                <Alert variant=\"warning\">\n                  {translate('organization.delete.sonarcloud.paid_plan_info')}\n                </Alert>\n              )}\n              <p>{translate('organization.delete.question')}</p>\n              <div className=\"spacer-top\">\n                <label htmlFor=\"downgrade-organization-name\">\n                  {translate('billing.downgrade.modal.type_to_proceed')}\n                </label>\n                <div className=\"little-spacer-top\">\n                  <input\n                    autoFocus={true}\n                    className=\"input-super-large\"\n                    id=\"downgrade-organization-name\"\n                    onChange={this.handleInput}\n                    type=\"text\"\n                    value={this.state.verify}\n                  />\n                </div>\n              </div>\n            </div>\n          }\n          modalHeader={translateWithParameters(\n            'organization.delete_x',\n            this.props.organization.name\n          )}\n          onConfirm={this.onDelete}>\n          {({ onClick }) => (\n            <Button className=\"js-custom-measure-delete button-red\" onClick={onClick}>\n              {translate('delete')}\n            </Button>\n          )}\n        </ConfirmButton>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps: DispatchToProps = { deleteOrganization: deleteOrganization as any };\n\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(OrganizationDelete)\n);\n"],"sourceRoot":""}