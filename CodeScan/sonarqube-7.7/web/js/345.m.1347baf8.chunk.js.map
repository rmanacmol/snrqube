{"version":3,"sources":["webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/shared/SeverityHelper.tsx","webpack:///./src/main/js/apps/coding-rules/components/ActivationFormModal.tsx"],"names":["__webpack_require__","d","__webpack_exports__","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","props","Object","assign","className","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SeverityHelper","_icons_components_SeverityIcon__WEBPACK_IMPORTED_MODULE_1__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_2__","severity","r","ActivationFormModal","_components_controls_Modal__WEBPACK_IMPORTED_MODULE_1__","_components_controls_Select__WEBPACK_IMPORTED_MODULE_2__","_components_shared_SeverityHelper__WEBPACK_IMPORTED_MODULE_3__","_api_quality_profiles__WEBPACK_IMPORTED_MODULE_4__","_helpers_constants__WEBPACK_IMPORTED_MODULE_5__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_6__","_quality_profiles_utils__WEBPACK_IMPORTED_MODULE_7__","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_8__","_components_ui_Alert__WEBPACK_IMPORTED_MODULE_9__","[object Object]","super","this","mounted","getParams","activation","rule","params","param","key","defaultValue","value","getQualityProfilesWithDepth","profiles","filter","profile","isBuiltIn","actions","edit","language","lang","map","depth","handleFormSubmit","event","preventDefault","setState","submitting","data","state","organization","then","onDone","onClose","handleParameterChange","_event$currentTarget","currentTarget","name","handleProfileChange","handleSeverityChange","renderSeverityOption","profilesWithDepth","length","_this$props","_this$state","_rule$params","isCustomRule","templateKey","activeInAllProfiles","isUpdateMode","contentLabel","modalHeader","onRequestClose","onSubmit","variant","clearable","disabled","onChange","options","label","repeat","optionRenderer","searchable","valueRenderer","title","type","placeholder","rows","dangerouslySetInnerHTML","__html","htmlDesc","onClick"],"mappings":"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","file":"js/345.m.1347baf8.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SeverityIcon from '../icons-components/SeverityIcon';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  severity: string;\n}\n\nexport default function SeverityHelper({ className, severity }: Props) {\n  if (!severity) {\n    return null;\n  }\n  return (\n    <span className={className}>\n      <SeverityIcon className=\"little-spacer-right\" severity={severity} />\n      {translate('severity', severity)}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from '../../../components/controls/Modal';\nimport Select from '../../../components/controls/Select';\nimport SeverityHelper from '../../../components/shared/SeverityHelper';\nimport { activateRule, Profile } from '../../../api/quality-profiles';\nimport { SEVERITIES } from '../../../helpers/constants';\nimport { translate } from '../../../helpers/l10n';\nimport { sortProfiles } from '../../quality-profiles/utils';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { Alert } from '../../../components/ui/Alert';\n\ninterface Props {\n  activation?: T.RuleActivation;\n  modalHeader: string;\n  onClose: () => void;\n  onDone: (severity: string) => Promise<void>;\n  organization: string | undefined;\n  profiles: Profile[];\n  rule: T.Rule | T.RuleDetails;\n}\n\ninterface State {\n  params: { [p: string]: string };\n  profile: string;\n  severity: string;\n  submitting: boolean;\n}\n\nexport default class ActivationFormModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const profilesWithDepth = this.getQualityProfilesWithDepth(props);\n    this.state = {\n      params: this.getParams(props),\n      profile: profilesWithDepth.length > 0 ? profilesWithDepth[0].key : '',\n      severity: props.activation ? props.activation.severity : props.rule.severity,\n      submitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getParams = ({ activation, rule } = this.props) => {\n    const params: { [p: string]: string } = {};\n    if (rule && rule.params) {\n      for (const param of rule.params) {\n        params[param.key] = param.defaultValue || '';\n      }\n      if (activation && activation.params) {\n        for (const param of activation.params) {\n          params[param.key] = param.value;\n        }\n      }\n    }\n    return params;\n  };\n\n  // Choose QP which a user can administrate, which are the same language and which are not built-in\n  getQualityProfilesWithDepth = ({ profiles } = this.props) => {\n    return sortProfiles(\n      profiles.filter(\n        profile =>\n          !profile.isBuiltIn &&\n          profile.actions &&\n          profile.actions.edit &&\n          profile.language === this.props.rule.lang\n      )\n    ).map(profile => ({\n      ...profile,\n      // Decrease depth by 1, so the top level starts at 0\n      depth: profile.depth - 1\n    }));\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    const data = {\n      key: this.state.profile,\n      organization: this.props.organization,\n      params: this.state.params,\n      rule: this.props.rule.key,\n      severity: this.state.severity\n    };\n    activateRule(data)\n      .then(() => this.props.onDone(data.severity))\n      .then(\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n            this.props.onClose();\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ submitting: false });\n          }\n        }\n      );\n  };\n\n  handleParameterChange = (event: React.SyntheticEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.currentTarget;\n    this.setState((state: State) => ({ params: { ...state.params, [name]: value } }));\n  };\n\n  handleProfileChange = ({ value }: { value: string }) => {\n    this.setState({ profile: value });\n  };\n\n  handleSeverityChange = ({ value }: { value: string }) => {\n    this.setState({ severity: value });\n  };\n\n  renderSeverityOption = ({ value }: { value: string }) => {\n    return <SeverityHelper severity={value} />;\n  };\n\n  render() {\n    const { activation, rule } = this.props;\n    const { profile, severity, submitting } = this.state;\n    const { params = [] } = rule;\n    const profilesWithDepth = this.getQualityProfilesWithDepth();\n    const isCustomRule = !!(rule as T.RuleDetails).templateKey;\n    const activeInAllProfiles = profilesWithDepth.length <= 0;\n    const isUpdateMode = !!activation;\n\n    return (\n      <Modal contentLabel={this.props.modalHeader} onRequestClose={this.props.onClose} size=\"small\">\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{this.props.modalHeader}</h2>\n          </div>\n\n          <div className=\"modal-body\">\n            {!isUpdateMode &&\n              activeInAllProfiles && (\n                <Alert variant=\"info\">{translate('coding_rules.active_in_all_profiles')}</Alert>\n              )}\n\n            <div className=\"modal-field\">\n              <label>{translate('coding_rules.quality_profile')}</label>\n              <Select\n                className=\"js-profile\"\n                clearable={false}\n                disabled={submitting || profilesWithDepth.length === 1}\n                onChange={this.handleProfileChange}\n                options={profilesWithDepth.map(profile => ({\n                  label: '   '.repeat(profile.depth) + profile.name,\n                  value: profile.key\n                }))}\n                value={profile}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <label>{translate('severity')}</label>\n              <Select\n                className=\"js-severity\"\n                clearable={false}\n                disabled={submitting}\n                onChange={this.handleSeverityChange}\n                optionRenderer={this.renderSeverityOption}\n                options={SEVERITIES.map(severity => ({\n                  label: translate('severity', severity),\n                  value: severity\n                }))}\n                searchable={false}\n                value={severity}\n                valueRenderer={this.renderSeverityOption}\n              />\n            </div>\n            {isCustomRule ? (\n              <div className=\"modal-field\">\n                <p className=\"note\">{translate('coding_rules.custom_rule.activation_notice')}</p>\n              </div>\n            ) : (\n              params.map(param => (\n                <div className=\"modal-field\" key={param.key}>\n                  <label title={param.key}>{param.key}</label>\n                  {param.type === 'TEXT' ? (\n                    <textarea\n                      disabled={submitting}\n                      name={param.key}\n                      onChange={this.handleParameterChange}\n                      placeholder={param.defaultValue}\n                      rows={3}\n                      value={this.state.params[param.key] || ''}\n                    />\n                  ) : (\n                    <input\n                      disabled={submitting}\n                      name={param.key}\n                      onChange={this.handleParameterChange}\n                      placeholder={param.defaultValue}\n                      type=\"text\"\n                      value={this.state.params[param.key] || ''}\n                    />\n                  )}\n                  <div\n                    className=\"note\"\n                    dangerouslySetInnerHTML={{ __html: param.htmlDesc || '' }}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitting || activeInAllProfiles}>\n              {isUpdateMode ? translate('save') : translate('coding_rules.activate')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n"],"sourceRoot":""}