{"version":3,"sources":["webpack:///./src/main/js/components/common/StatusIndicator.css?6d1c","webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./node_modules/lodash/each.js","webpack:///./src/main/js/apps/system/styles.css?cccb","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx","webpack:///./src/main/js/components/common/RestartForm.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./node_modules/lodash/forEach.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_castFunction.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","HealthCauseItem","className","health","healthCause","index_js_exposed","Alert","classnames","display","variant","system","RED","StatusIndicator_StatusIndicator","color","size","small-status-indicator","big-status-indicator","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","length","GREEN","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","Object","l10n","LOGS_LEVELS","HA_FIELD","HEALTH_FIELD","HEALTHCAUSES_FIELD","PLUGINS_FIELD","SETTINGS_FIELD","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","isCluster","getServerId","getSystemLogsLevel","defaultLevel","logLevels","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","assign","getClusterMainCardSection","getStandaloneMainSections","omitBy_default","value","includes","startsWith","getFileNameSuffix","suffix","now","Date","getFullYear","getMonth","getDate","getHours","getMinutes","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","sortUpgrades","upgrades","upgrade","Number","version","split","groupUpgrades","groupedVersions","groupBy_default","keys","SysInfoItem","Array","JSON","stringify","BooleanItem","ObjectItem","AlertSuccessIcon","AlertErrorIcon","map_default","Section","items","id","style","wordBreak","HealthCard","onClick","open","_groupSections","mainSection","sections","each_default","item","groupSections","showFields","showSections","showLogLevelWarning","BoxedGroupAccordion","data","renderHeader","title","section","ClusterSysInfos","toggleCard","node","getSearchNodes","ChangeLogLevelForm_ChangeLogLevelForm","[object Object]","props","super","this","handleFormSubmit","event","preventDefault","newLevel","state","updating","setState","then","onChange","handleLevelChange","currentTarget","_this$state","header","Modal","contentLabel","onRequestClose","onClose","onSubmit","level","checked","type","htmlFor","infoMsg","buttons","disabled","PageActions_PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","handleServerRestartOpen","openRestartForm","handleServerRestartClose","removeElementFocus","blur","nextProps","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","target","DropdownIcon","serverId","canRestart","RestartForm","cluster","PageHeader","showActions","loading","StandAloneSysInfos","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate_SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","turned","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","rel","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","slice","downloadUrl","SystemUpgradeForm_SystemUpgradeForm","upgrading","SystemUpgradeNotif_SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","__webpack_exports__","es","fetchSysInfo","toggleSysInfoCards","toggledCard","location","filter","card","concat","updateQuery","newQuery","router","replace","pathname","Suggestions","suggestions","Helmet_default","a","renderSysInfo","d","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","formatterOption","year","month","day","children","arrayMap","baseIteratee","baseMap","isArray","collection","iteratee","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","result","call","ChevronDownIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","fill","HealthType","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restartAndWait","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","POLLING_INTERVAL","promiseStatus","Promise","resolve","pollStatus","cb","setTimeout","r","status","OpenCloseIcon","_a","__rest","_ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__","_ChevronRightcon__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_1__","_api_system__WEBPACK_IMPORTED_MODULE_2__","_controls_Modal__WEBPACK_IMPORTED_MODULE_3__","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","restarting","document","reload","text-center","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","hoveringInner","handleClick","onDetailEnter","onDetailLeave","_this$props","no-hover","role","onMouseEnter","onMouseLeave","arrayEach","baseEach","castFunction","array","index"],"mappings":"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","file":"js/289.m.cdd4a599.chunk.js","sourcesContent":["\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n * SonarQube\\n * Copyright (C) 2009-2019 SonarSource SA\\n * mailto:info AT sonarsource DOT com\\n *\\n * This program is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 3 of the License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public License\\n * along with this program; if not, write to the Free Software Foundation,\\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\\n */\\n.status-indicator {\\n  display: inline-block;\\n  box-sizing: border-box;\\n  width: 16px;\\n  height: 16px;\\n  border-radius: 16px;\\n  margin: 4px;\\n}\\n\\n.status-indicator.small-status-indicator {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 8px;\\n  margin: 8px;\\n}\\n\\n.status-indicator.big-status-indicator {\\n  width: 24px;\\n  height: 24px;\\n  border-radius: 24px;\\n  margin: 0;\\n}\\n\\n.status-indicator.red {\\n  position: relative;\\n  z-index: 2;\\n  background-color: #d4333f;\\n}\\n\\n.status-indicator.red::after {\\n  position: absolute;\\n  z-index: 3;\\n  display: block;\\n  width: 6px;\\n  height: 2px;\\n  top: 3px;\\n  left: 1px;\\n  background-color: #fff;\\n  content: '';\\n}\\n\\n.status-indicator.yellow {\\n  background-color: #eabe06;\\n}\\n\\n.status-indicator.green {\\n  background-color: #00aa00;\\n}\\n\\n.status-indicator.orange {\\n  background-color: #ed7d20;\\n}\\n\\n.status-indicator.gray {\\n  background-color: #b4b4b4;\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = require('./forEach');\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n * SonarQube\\n * Copyright (C) 2009-2019 SonarSource SA\\n * mailto:info AT sonarsource DOT com\\n *\\n * This program is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 3 of the License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public License\\n * along with this program; if not, write to the Free Software Foundation,\\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\\n */\\n.system-info-health-title {\\n  margin-top: 24px;\\n  margin-bottom: 16px;\\n}\\n\\n.system-info-health-info {\\n  margin-top: -12px;\\n}\\n\\n.system-info-health-info .status-indicator {\\n  position: relative;\\n  top: 8px;\\n}\\n\\n.system-info-health-info.no-margin .status-indicator {\\n  margin: 0;\\n}\\n\\n.system-info-section ~ .system-info-section {\\n  margin-top: 16px;\\n}\\n\\n.system-info-section-item-name {\\n  width: 25vw;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.system-upgrade-version {\\n  padding: 8px;\\n}\\n\\n.system-upgrade-version ~ .system-upgrade-version {\\n  margin-top: 10px;\\n  padding-top: 18px;\\n  border-top: solid 1px #e6e6e6;\\n}\\n\\n.system-upgrade-intermediate {\\n  padding: 6px 10px;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { HealthType } from '../../../../api/system';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  className?: string;\n  health: HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <Alert\n      className={classNames('boxed-group-accordion-alert', className)}\n      display=\"inline\"\n      variant={health === HealthType.RED ? 'error' : 'warning'}>\n      {healthCause}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { HealthType } from '../../../../api/system';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== HealthType.GREEN;\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport {\n  ClusterSysInfo,\n  HealthType,\n  NodeInfo,\n  SysInfo,\n  SysInfoSection,\n  SysValueObject,\n  SystemUpgrade\n} from '../../api/system';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_FIELD = 'Health';\nexport const HEALTHCAUSES_FIELD = 'Health Causes';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SETTINGS_FIELD = 'Settings';\n\nexport function ignoreInfoFields(sysInfoObject: SysValueObject): SysValueObject {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTHCAUSES_FIELD,\n    'Name',\n    PLUGINS_FIELD,\n    SETTINGS_FIELD\n  ]) as SysValueObject;\n}\n\nexport function getHealth(sysInfoObject: SysValueObject): HealthType {\n  return sysInfoObject[HEALTH_FIELD] as HealthType;\n}\n\nexport function getHealthCauses(sysInfoObject: SysValueObject): string[] {\n  return sysInfoObject[HEALTHCAUSES_FIELD] as string[];\n}\n\nexport function getLogsLevel(sysInfoObject?: SysValueObject): string {\n  if (!sysInfoObject) {\n    return LOGS_LEVELS[0];\n  }\n  if (sysInfoObject['Web Logging'] || sysInfoObject['Compute Engine Logging']) {\n    return sortBy(\n      [\n        getLogsLevel((sysInfoObject as NodeInfo)['Web Logging']),\n        getLogsLevel((sysInfoObject as NodeInfo)['Compute Engine Logging'])\n      ],\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    )[1];\n  }\n  if (sysInfoObject['System']) {\n    return getLogsLevel((sysInfoObject as SysInfo)['System']);\n  }\n  return (sysInfoObject['Logs Level'] || LOGS_LEVELS[0]) as string;\n}\n\nexport function getAppNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Application Nodes'];\n}\n\nexport function getSearchNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Search Nodes'];\n}\n\nexport function isCluster(sysInfoData?: SysInfo): boolean {\n  return (\n    sysInfoData !== undefined && sysInfoData['System'] && sysInfoData['System'][HA_FIELD] === true\n  );\n}\n\nexport function getServerId(sysInfoData?: SysInfo): string | undefined {\n  return sysInfoData && sysInfoData['System']['Server ID'];\n}\n\nexport function getSystemLogsLevel(sysInfoData?: SysInfo): string {\n  const defaultLevel = LOGS_LEVELS[0];\n  if (!sysInfoData) {\n    return defaultLevel;\n  }\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(\n      getAppNodes(sysInfoData as ClusterSysInfo).map(getLogsLevel),\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : defaultLevel;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: NodeInfo): string {\n  return nodeInfo['Name'];\n}\n\nfunction getSystemData(sysInfoData: SysInfo): SysValueObject {\n  const statData: SysValueObject = {};\n  const statistics = sysInfoData['Statistics'] as SysValueObject;\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics['ncloc'] as number, 'INT');\n  }\n  return { ...sysInfoData['System'], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: ClusterSysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omit(sysInfoData, [\n      'Application Nodes',\n      PLUGINS_FIELD,\n      'Search Nodes',\n      SETTINGS_FIELD,\n      'Statistics',\n      'System'\n    ]) as SysValueObject)\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: SysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, 'Statistics', 'System'].includes(key) ||\n        key.startsWith('Compute Engine') ||\n        key.startsWith('Search') ||\n        key.startsWith('Web')\n    ) as SysValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: SysInfo): SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith('Web')) as SysValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith('Compute Engine')\n    ) as SysValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) => key.startsWith('Search')) as SysValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: SysValueObject) {\n  const mainSection: SysValueObject = {};\n  const sections: SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HealthType, SysValue, SysValueObject } from '../../../../api/system';\nimport { HEALTH_FIELD } from '../../utils';\n\ninterface Props {\n  name: string;\n  value: SysValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === 'State') {\n    return <HealthItem className=\"no-margin\" health={value as HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value as boolean} />;\n    case 'object':\n      return <ObjectItem value={value as SysValueObject} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: SysValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\nimport { SysValueObject } from '../../../../api/system';\n\ninterface Props {\n  name?: string;\n  items: SysValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { HealthType, SysValueObject } from '../../../../api/system';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: SysValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <Alert\n              className=\"boxed-group-accordion-alert spacer-left\"\n              display=\"inline\"\n              variant=\"warning\">\n              {translate('system.log_level.warning.short')}\n            </Alert>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo } from '../../../api/system';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: ClusterSysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { Alert } from '../../../components/ui/Alert';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <Alert className=\"spacer-top\" variant=\"info\">\n              {this.props.infoMsg}\n            </Alert>\n            {newLevel !== 'INFO' && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('system.log_level.warning')}\n              </Alert>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport RestartForm from '../../../components/common/RestartForm';\nimport { getFileNameSuffix } from '../utils';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n  openRestartForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false,\n      openRestartForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  handleServerRestartOpen = () => {\n    this.setState({ openRestartForm: true });\n  };\n\n  handleServerRestartClose = () => {\n    this.setState({ openRestartForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <Button\n            className=\"spacer-left\"\n            id=\"restart-server-button\"\n            onClick={this.handleServerRestartOpen}>\n            {translate('system.restart_server')}\n          </Button>\n        )}\n        {this.props.canRestart &&\n          this.state.openRestartForm && <RestartForm onClose={this.handleServerRestartClose} />}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n}\n\nexport default function PageHeader(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {props.showActions && (\n        <PageActions\n          canDownloadLogs={!props.isCluster}\n          canRestart={!props.isCluster}\n          cluster={props.isCluster}\n          logLevel={props.logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={props.serverId}\n        />\n      )}\n      {props.loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { SysInfo } from '../../../api/system';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: SysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { ButtonLink } from '../../../../components/ui/buttons';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = () => {\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ButtonLink className=\"little-spacer-bottom\" onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </ButtonLink>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a\n                        className=\"spacer-left\"\n                        href={upgrade.changeLogUrl}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a\n            className=\"spacer-left\"\n            href={lastUpgrade.changeLogUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport { SystemUpgrade } from '../../../../api/system';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\nimport { ResetButtonLink } from '../../../../components/ui/buttons';\n\ninterface Props {\n  systemUpgrades: SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a\n            className=\"pull-left\"\n            href=\"https://www.sonarqube.org/downloads/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades, SystemUpgrade } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface State {\n  systemUpgrades: SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <Alert variant=\"info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </Alert>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo, getSystemInfo, SysInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery\n} from '../utils';\nimport '../styles.css';\n\ntype Props = WithRouterProps;\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: SysInfo;\n}\n\nclass App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      (sysInfoData: SysInfo) => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData as ClusterSysInfo}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        <PageHeader\n          isCluster={isCluster(sysInfoData)}\n          loading={loading}\n          logLevel={getSystemLogsLevel(sysInfoData)}\n          onLogLevelChange={this.fetchSysInfo}\n          serverId={getServerId(sysInfoData)}\n          showActions={sysInfoData !== undefined}\n        />\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport type SysValue = boolean | string | number | HealthType | SysValueObject | SysValueArray;\nexport interface SysValueObject {\n  [key: string]: SysValue;\n}\nexport interface SysValueArray extends Array<SysValue> {}\n\nexport interface SysInfoSection {\n  [sectionName: string]: SysValueObject;\n}\n\nexport enum HealthType {\n  RED = 'RED',\n  YELLOW = 'YELLOW',\n  GREEN = 'GREEN'\n}\n\nexport interface NodeInfo extends SysValueObject {\n  'Compute Engine Logging': { 'Logs Level': string };\n  Health: HealthType;\n  'Health Causes': string[];\n  Name: string;\n  'Web Logging': { 'Logs Level': string };\n}\n\nexport interface SysInfo extends SysValueObject {\n  Health: HealthType;\n  'Health Causes': string[];\n  System: {\n    'High Availability': boolean;\n    'Logs Level': string;\n    'Server ID': string;\n  };\n}\n\nexport interface ClusterSysInfo extends SysInfo {\n  'Application Nodes': NodeInfo[];\n  'Search Nodes': NodeInfo[];\n}\n\nexport interface SystemUpgrade {\n  version: string;\n  description: string;\n  releaseDate: string;\n  changeLogUrl: string;\n  downloadUrl: string;\n  plugins: any;\n}\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<SysInfo> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: string }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nconst POLLING_INTERVAL = 2000;\n\nfunction pollStatus(cb: Function): void {\n  setTimeout(() => {\n    getSystemStatus()\n      .then(r => {\n        if (r.status === 'UP') {\n          cb();\n        } else {\n          pollStatus(cb);\n        }\n      })\n      .catch(() => pollStatus(cb));\n  }, POLLING_INTERVAL);\n}\n\nfunction promiseStatus(): Promise<any> {\n  return new Promise(resolve => pollStatus(resolve));\n}\n\nexport function restartAndWait(): Promise<any> {\n  return restart().then(promiseStatus);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { restartAndWait } from '../../api/system';\nimport Modal from '../controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n}\n\ninterface State {\n  restarting: boolean;\n}\n\nexport default class RestartForm extends React.PureComponent<Props, State> {\n  state: State = { restarting: false };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!this.state.restarting) {\n      this.setState({ restarting: true });\n      restartAndWait().then(\n        () => document.location && document.location.reload(),\n        () => this.setState({ restarting: false })\n      );\n    }\n  };\n\n  render() {\n    const { restarting } = this.state;\n    const header = translate('system.restart_server');\n    return (\n      <Modal contentLabel={header} onRequestClose={restarting ? undefined : this.props.onClose}>\n        <form id=\"restart-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p className={classNames('spacer-top spacer-bottom', { 'text-center': restarting })}>\n              {translate(restarting ? 'system.is_restarting' : 'system.are_you_sure_to_restart')}\n            </p>\n            {restarting && (\n              <p className=\"big-spacer-top spacer-bottom text-center\">\n                <i className=\"spinner\" />\n              </p>\n            )}\n          </div>\n          {!restarting && (\n            <div className=\"modal-foot\">\n              <SubmitButton id=\"restart-server-submit\">{translate('restart')}</SubmitButton>\n              <ResetButtonLink\n                className=\"js-modal-close\"\n                id=\"restart-server-cancel\"\n                onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n"],"sourceRoot":""}