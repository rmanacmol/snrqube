{"version":3,"sources":["webpack:///./src/main/js/components/common/RestartForm.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./node_modules/lodash/forEach.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_castFunction.js","webpack:///./src/main/js/components/common/StatusIndicator.css?6d1c","webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./node_modules/lodash/each.js","webpack:///./src/main/js/apps/system/styles.css?cccb","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/components/intl/DateFormatter.tsx","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx"],"names":["RestartForm","_super","_this","apply","this","arguments","state","restarting","handleFormSubmit","event","preventDefault","setState","Object","_api_system__WEBPACK_IMPORTED_MODULE_2__","then","document","location","reload","__extends","prototype","render","header","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_0__","_controls_Modal__WEBPACK_IMPORTED_MODULE_3__","contentLabel","onRequestClose","undefined","props","onClose","id","onSubmit","className","classnames__WEBPACK_IMPORTED_MODULE_1__","text-center","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","onClick","BoxedGroupAccordion","hoveringInner","handleClick","data","onDetailEnter","onDetailLeave","_a","open","renderHeader","title","no-hover","role","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","children","arrayEach","__webpack_require__","baseEach","castFunction","isArray","module","exports","collection","iteratee","array","index","length","value","content","i","options","hmr","transform","insertInto","locals","push","HealthCauseItem","health","healthCause","index_js_exposed","Alert","classnames","display","variant","system","RED","StatusIndicator_StatusIndicator","color","size","small-status-indicator","big-status-indicator","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","GREEN","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","l10n","LOGS_LEVELS","HA_FIELD","HEALTH_FIELD","HEALTHCAUSES_FIELD","PLUGINS_FIELD","SETTINGS_FIELD","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","isCluster","getServerId","getSystemLogsLevel","defaultLevel","logLevels","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","__assign","getClusterMainCardSection","getStandaloneMainSections","omitBy_default","includes","startsWith","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","sortUpgrades","upgrades","upgrade","Number","version","split","groupUpgrades","groupedVersions","groupBy_default","keys","SysInfoItem","Array","JSON","stringify","SysInfoItem_typeof","BooleanItem","ObjectItem","AlertSuccessIcon","AlertErrorIcon","map_default","Section","items","style","wordBreak","HealthCard","_b","mainSection","sections","each_default","item","_typeof","groupSections","showFields","showSections","showLogLevelWarning","section","ClusterSysInfos","toggleCard","node","getSearchNodes","ChangeLogLevelForm","call","newLevel","updating","onChange","handleLevelChange","currentTarget","Modal","level","checked","type","htmlFor","infoMsg","buttons","disabled","PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","handleServerRestartOpen","openRestartForm","handleServerRestartClose","removeElementFocus","blur","PageActions_extends","componentWillReceiveProps","nextProps","suffix","now","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","target","DropdownIcon","serverId","Date","getFullYear","getMonth","getDate","getHours","getMinutes","canRestart","components_ChangeLogLevelForm","cluster","PageHeader","showActions","components_PageActions","loading","StandAloneSysInfos","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","SystemUpgradeIntermediate_extends","turned","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","rel","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","system_upgrade_SystemUpgradeIntermediate","slice","downloadUrl","SystemUpgradeForm","upgrading","SystemUpgradeForm_extends","SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","SystemUpgradeNotif_extends","componentDidMount","componentWillUnmount","system_upgrade_SystemUpgradeForm","App_App","App","fetchSysInfo","toggleSysInfoCards","toggledCard","filter","card","concat","updateQuery","newQuery","App_assign","router","replace","pathname","App_extends","renderSysInfo","Suggestions","suggestions","Helmet_default","a","system_upgrade_SystemUpgradeNotif","__webpack_exports__","es","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","modal-small","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","_SuggestionsContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps","formatterOption","year","month","day","longFormatterOption","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","arrayMap","baseIteratee","baseMap","baseAssignValue","createAggregator","hasOwnProperty","groupBy","result","d","ChevronDownIcon","_Icon__WEBPACK_IMPORTED_MODULE_1__","fill","HealthType","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restartAndWait","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","catch","POLLING_INTERVAL","promiseStatus","Promise","resolve","pollStatus","cb","setTimeout","r","status","OpenCloseIcon","__rest","_ChevronDownIcon__WEBPACK_IMPORTED_MODULE_1__","_ChevronRightcon__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"js/289.1553004420962.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { restartAndWait } from '../../api/system';\nimport Modal from '../controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n}\n\ninterface State {\n  restarting: boolean;\n}\n\nexport default class RestartForm extends React.PureComponent<Props, State> {\n  state: State = { restarting: false };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!this.state.restarting) {\n      this.setState({ restarting: true });\n      restartAndWait().then(\n        () => document.location && document.location.reload(),\n        () => this.setState({ restarting: false })\n      );\n    }\n  };\n\n  render() {\n    const { restarting } = this.state;\n    const header = translate('system.restart_server');\n    return (\n      <Modal contentLabel={header} onRequestClose={restarting ? undefined : this.props.onClose}>\n        <form id=\"restart-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p className={classNames('spacer-top spacer-bottom', { 'text-center': restarting })}>\n              {translate(restarting ? 'system.is_restarting' : 'system.are_you_sure_to_restart')}\n            </p>\n            {restarting && (\n              <p className=\"big-spacer-top spacer-bottom text-center\">\n                <i className=\"spinner\" />\n              </p>\n            )}\n          </div>\n          {!restarting && (\n            <div className=\"modal-foot\">\n              <SubmitButton id=\"restart-server-submit\">{translate('restart')}</SubmitButton>\n              <ResetButtonLink\n                className=\"js-modal-close\"\n                id=\"restart-server-cancel\"\n                onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n * SonarQube\\n * Copyright (C) 2009-2019 SonarSource SA\\n * mailto:info AT sonarsource DOT com\\n *\\n * This program is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 3 of the License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public License\\n * along with this program; if not, write to the Free Software Foundation,\\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\\n */\\n.status-indicator {\\n  display: inline-block;\\n  box-sizing: border-box;\\n  width: 16px;\\n  height: 16px;\\n  border-radius: 16px;\\n  margin: 4px;\\n}\\n\\n.status-indicator.small-status-indicator {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 8px;\\n  margin: 8px;\\n}\\n\\n.status-indicator.big-status-indicator {\\n  width: 24px;\\n  height: 24px;\\n  border-radius: 24px;\\n  margin: 0;\\n}\\n\\n.status-indicator.red {\\n  position: relative;\\n  z-index: 2;\\n  background-color: #d4333f;\\n}\\n\\n.status-indicator.red::after {\\n  position: absolute;\\n  z-index: 3;\\n  display: block;\\n  width: 6px;\\n  height: 2px;\\n  top: 3px;\\n  left: 1px;\\n  background-color: #fff;\\n  content: '';\\n}\\n\\n.status-indicator.yellow {\\n  background-color: #eabe06;\\n}\\n\\n.status-indicator.green {\\n  background-color: #00aa00;\\n}\\n\\n.status-indicator.orange {\\n  background-color: #ed7d20;\\n}\\n\\n.status-indicator.gray {\\n  background-color: #b4b4b4;\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = require('./forEach');\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n * SonarQube\\n * Copyright (C) 2009-2019 SonarSource SA\\n * mailto:info AT sonarsource DOT com\\n *\\n * This program is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 3 of the License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public License\\n * along with this program; if not, write to the Free Software Foundation,\\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\\n */\\n.system-info-health-title {\\n  margin-top: 24px;\\n  margin-bottom: 16px;\\n}\\n\\n.system-info-health-info {\\n  margin-top: -12px;\\n}\\n\\n.system-info-health-info .status-indicator {\\n  position: relative;\\n  top: 8px;\\n}\\n\\n.system-info-health-info.no-margin .status-indicator {\\n  margin: 0;\\n}\\n\\n.system-info-section ~ .system-info-section {\\n  margin-top: 16px;\\n}\\n\\n.system-info-section-item-name {\\n  width: 25vw;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n.system-upgrade-version {\\n  padding: 8px;\\n}\\n\\n.system-upgrade-version ~ .system-upgrade-version {\\n  margin-top: 10px;\\n  padding-top: 18px;\\n  border-top: solid 1px #e6e6e6;\\n}\\n\\n.system-upgrade-intermediate {\\n  padding: 6px 10px;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { HealthType } from '../../../../api/system';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  className?: string;\n  health: HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <Alert\n      className={classNames('boxed-group-accordion-alert', className)}\n      display=\"inline\"\n      variant={health === HealthType.RED ? 'error' : 'warning'}>\n      {healthCause}\n    </Alert>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { HealthType } from '../../../../api/system';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== HealthType.GREEN;\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem className=\"spacer-right\" health={health} healthCause={cause} key={idx} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport {\n  ClusterSysInfo,\n  HealthType,\n  NodeInfo,\n  SysInfo,\n  SysInfoSection,\n  SysValueObject,\n  SystemUpgrade\n} from '../../api/system';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_FIELD = 'Health';\nexport const HEALTHCAUSES_FIELD = 'Health Causes';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SETTINGS_FIELD = 'Settings';\n\nexport function ignoreInfoFields(sysInfoObject: SysValueObject): SysValueObject {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTHCAUSES_FIELD,\n    'Name',\n    PLUGINS_FIELD,\n    SETTINGS_FIELD\n  ]) as SysValueObject;\n}\n\nexport function getHealth(sysInfoObject: SysValueObject): HealthType {\n  return sysInfoObject[HEALTH_FIELD] as HealthType;\n}\n\nexport function getHealthCauses(sysInfoObject: SysValueObject): string[] {\n  return sysInfoObject[HEALTHCAUSES_FIELD] as string[];\n}\n\nexport function getLogsLevel(sysInfoObject?: SysValueObject): string {\n  if (!sysInfoObject) {\n    return LOGS_LEVELS[0];\n  }\n  if (sysInfoObject['Web Logging'] || sysInfoObject['Compute Engine Logging']) {\n    return sortBy(\n      [\n        getLogsLevel((sysInfoObject as NodeInfo)['Web Logging']),\n        getLogsLevel((sysInfoObject as NodeInfo)['Compute Engine Logging'])\n      ],\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    )[1];\n  }\n  if (sysInfoObject['System']) {\n    return getLogsLevel((sysInfoObject as SysInfo)['System']);\n  }\n  return (sysInfoObject['Logs Level'] || LOGS_LEVELS[0]) as string;\n}\n\nexport function getAppNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Application Nodes'];\n}\n\nexport function getSearchNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Search Nodes'];\n}\n\nexport function isCluster(sysInfoData?: SysInfo): boolean {\n  return (\n    sysInfoData !== undefined && sysInfoData['System'] && sysInfoData['System'][HA_FIELD] === true\n  );\n}\n\nexport function getServerId(sysInfoData?: SysInfo): string | undefined {\n  return sysInfoData && sysInfoData['System']['Server ID'];\n}\n\nexport function getSystemLogsLevel(sysInfoData?: SysInfo): string {\n  const defaultLevel = LOGS_LEVELS[0];\n  if (!sysInfoData) {\n    return defaultLevel;\n  }\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(\n      getAppNodes(sysInfoData as ClusterSysInfo).map(getLogsLevel),\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : defaultLevel;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: NodeInfo): string {\n  return nodeInfo['Name'];\n}\n\nfunction getSystemData(sysInfoData: SysInfo): SysValueObject {\n  const statData: SysValueObject = {};\n  const statistics = sysInfoData['Statistics'] as SysValueObject;\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics['ncloc'] as number, 'INT');\n  }\n  return { ...sysInfoData['System'], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: ClusterSysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omit(sysInfoData, [\n      'Application Nodes',\n      PLUGINS_FIELD,\n      'Search Nodes',\n      SETTINGS_FIELD,\n      'Statistics',\n      'System'\n    ]) as SysValueObject)\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: SysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, 'Statistics', 'System'].includes(key) ||\n        key.startsWith('Compute Engine') ||\n        key.startsWith('Search') ||\n        key.startsWith('Web')\n    ) as SysValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: SysInfo): SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith('Web')) as SysValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith('Compute Engine')\n    ) as SysValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) => key.startsWith('Search')) as SysValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: SysValueObject) {\n  const mainSection: SysValueObject = {};\n  const sections: SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: RawQuery): Query => ({\n    expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): RawQuery =>\n    cleanQuery({\n      expand: serializeStringArray(query.expandedCards)\n    })\n);\n\nexport function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HealthType, SysValue, SysValueObject } from '../../../../api/system';\nimport { HEALTH_FIELD } from '../../utils';\n\ninterface Props {\n  name: string;\n  value: SysValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === 'State') {\n    return <HealthItem className=\"no-margin\" health={value as HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value as boolean} />;\n    case 'object':\n      return <ObjectItem value={value as SysValueObject} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: SysValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\nimport { SysValueObject } from '../../../../api/system';\n\ninterface Props {\n  name?: string;\n  items: SysValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { HealthType, SysValueObject } from '../../../../api/system';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: SysValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <Alert\n              className=\"boxed-group-accordion-alert spacer-left\"\n              display=\"inline\"\n              variant=\"warning\">\n              {translate('system.log_level.warning.short')}\n            </Alert>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section items={section} key={name} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo } from '../../../api/system';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: ClusterSysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          key={getNodeName(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { Alert } from '../../../components/ui/Alert';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <Alert className=\"spacer-top\" variant=\"info\">\n              {this.props.infoMsg}\n            </Alert>\n            {newLevel !== 'INFO' && (\n              <Alert className=\"spacer-top\" variant=\"warning\">\n                {translate('system.log_level.warning')}\n              </Alert>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport RestartForm from '../../../components/common/RestartForm';\nimport { getFileNameSuffix } from '../utils';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n  openRestartForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false,\n      openRestartForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  handleServerRestartOpen = () => {\n    this.setState({ openRestartForm: true });\n  };\n\n  handleServerRestartClose = () => {\n    this.setState({ openRestartForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <Button\n            className=\"spacer-left\"\n            id=\"restart-server-button\"\n            onClick={this.handleServerRestartOpen}>\n            {translate('system.restart_server')}\n          </Button>\n        )}\n        {this.props.canRestart &&\n          this.state.openRestartForm && <RestartForm onClose={this.handleServerRestartClose} />}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n}\n\nexport default function PageHeader(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {props.showActions && (\n        <PageActions\n          canDownloadLogs={!props.isCluster}\n          canRestart={!props.isCluster}\n          cluster={props.isCluster}\n          logLevel={props.logLevel}\n          onLogLevelChange={props.onLogLevelChange}\n          serverId={props.serverId}\n        />\n      )}\n      {props.loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { SysInfo } from '../../../api/system';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: SysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport { ButtonLink } from '../../../../components/ui/buttons';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = () => {\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ButtonLink className=\"little-spacer-bottom\" onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </ButtonLink>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a\n                        className=\"spacer-left\"\n                        href={upgrade.changeLogUrl}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a\n            className=\"spacer-left\"\n            href={lastUpgrade.changeLogUrl}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport { SystemUpgrade } from '../../../../api/system';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\nimport { ResetButtonLink } from '../../../../components/ui/buttons';\n\ninterface Props {\n  systemUpgrades: SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              systemUpgrades={upgrades}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a\n            className=\"pull-left\"\n            href=\"https://www.sonarqube.org/downloads/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades, SystemUpgrade } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\nimport { Alert } from '../../../../components/ui/Alert';\n\ninterface State {\n  systemUpgrades: SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <Alert variant=\"info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </Alert>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo, getSystemInfo, SysInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery\n} from '../utils';\nimport '../styles.css';\n\ntype Props = WithRouterProps;\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: SysInfo;\n}\n\nclass App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      (sysInfoData: SysInfo) => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData as ClusterSysInfo}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        <PageHeader\n          isCluster={isCluster(sysInfoData)}\n          loading={loading}\n          logLevel={getSystemLogsLevel(sysInfoData)}\n          onLogLevelChange={this.fetchSysInfo}\n          serverId={getServerId(sysInfoData)}\n          showActions={sysInfoData !== undefined}\n        />\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedDate } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { year: 'numeric', month: 'short', day: '2-digit' };\n\nexport const longFormatterOption = { year: 'numeric', month: 'long', day: 'numeric' };\n\nexport default function DateFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedDate value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedDate>\n  );\n}\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport type SysValue = boolean | string | number | HealthType | SysValueObject | SysValueArray;\nexport interface SysValueObject {\n  [key: string]: SysValue;\n}\nexport interface SysValueArray extends Array<SysValue> {}\n\nexport interface SysInfoSection {\n  [sectionName: string]: SysValueObject;\n}\n\nexport enum HealthType {\n  RED = 'RED',\n  YELLOW = 'YELLOW',\n  GREEN = 'GREEN'\n}\n\nexport interface NodeInfo extends SysValueObject {\n  'Compute Engine Logging': { 'Logs Level': string };\n  Health: HealthType;\n  'Health Causes': string[];\n  Name: string;\n  'Web Logging': { 'Logs Level': string };\n}\n\nexport interface SysInfo extends SysValueObject {\n  Health: HealthType;\n  'Health Causes': string[];\n  System: {\n    'High Availability': boolean;\n    'Logs Level': string;\n    'Server ID': string;\n  };\n}\n\nexport interface ClusterSysInfo extends SysInfo {\n  'Application Nodes': NodeInfo[];\n  'Search Nodes': NodeInfo[];\n}\n\nexport interface SystemUpgrade {\n  version: string;\n  description: string;\n  releaseDate: string;\n  changeLogUrl: string;\n  downloadUrl: string;\n  plugins: any;\n}\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<SysInfo> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: string }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nconst POLLING_INTERVAL = 2000;\n\nfunction pollStatus(cb: Function): void {\n  setTimeout(() => {\n    getSystemStatus()\n      .then(r => {\n        if (r.status === 'UP') {\n          cb();\n        } else {\n          pollStatus(cb);\n        }\n      })\n      .catch(() => pollStatus(cb));\n  }, POLLING_INTERVAL);\n}\n\nfunction promiseStatus(): Promise<any> {\n  return new Promise(resolve => pollStatus(resolve));\n}\n\nexport function restartAndWait(): Promise<any> {\n  return restart().then(promiseStatus);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n"],"sourceRoot":""}