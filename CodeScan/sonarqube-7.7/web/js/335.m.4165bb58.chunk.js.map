{"version":3,"sources":["webpack:///./src/main/js/apps/projectKey/UpdateForm.tsx","webpack:///./src/main/js/apps/projectKey/Key.tsx","webpack:///./src/main/js/components/controls/Modal.tsx","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx"],"names":["UpdateForm_UpdateForm","index_js_exposed","[object Object]","this","state","handleChange","event","newKey","currentTarget","value","setState","handleReset","undefined","component","props","key","hasChanged","ConfirmButton","confirmButtonText","Object","l10n","confirmData","modalBody","name","className","modalHeader","onConfirm","onKeyChange","onFormSubmit","onSubmit","id","onChange","placeholder","required","type","buttons","disabled","onClick","__webpack_require__","d","__webpack_exports__","Key_Key","handleChangeKey","components","from","to","then","RecentHistory","remove","router","replace","pathname","query","Helmet_default","a","title","es","Modal","react__WEBPACK_IMPORTED_MODULE_0__","react_modal__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","assign","modal-small","size","modal-medium","modal-large","isOpen","overlayClassName","modal-no-backdrop","noBackdrop","SimpleModal","mounted","submitting","stopSubmitting","handleCloseClick","preventDefault","blur","onClose","handleFormSubmit","submit","handleSubmitClick","result","_a","children","header","modalProps","__rest","_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","onRequestClose","onCloseClick","onSubmitClick","ConfirmModal","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","_ui_buttons__WEBPACK_IMPORTED_MODULE_3__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_4__","handleSubmit","renderModalContent","_this$props","confirmDisable","headerDescription","isDestructive","_this$props$cancelBut","cancelButtonText","loading","autoFocus","_this$props2","renderConfirmModal","modalHeaderDescription","confirmModalProps","_ConfirmModal__WEBPACK_IMPORTED_MODULE_1__","_ModalButton__WEBPACK_IMPORTED_MODULE_2__","modal","ModalButton","handleButtonClick","handleCloseModal"],"mappings":"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","file":"js/335.m.4165bb58.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, SubmitButton } from '../../components/ui/buttons';\nimport { translate, translateWithParameters } from '../../helpers/l10n';\nimport ConfirmButton from '../../components/controls/ConfirmButton';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n  onKeyChange: (newKey: string) => Promise<void>;\n}\n\ninterface State {\n  newKey?: string;\n}\n\nexport default class UpdateForm extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newKey = event.currentTarget.value;\n    this.setState({ newKey });\n  };\n\n  handleReset = () => {\n    this.setState({ newKey: undefined });\n  };\n\n  render() {\n    const { component } = this.props;\n    const { newKey } = this.state;\n    const value = newKey != null ? newKey : component.key;\n    const hasChanged = value !== component.key;\n\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('update_verb')}\n        confirmData={newKey}\n        modalBody={\n          <>\n            {translateWithParameters('update_key.are_you_sure_to_change_key', component.name)}\n            <div className=\"spacer-top\">\n              {translate('update_key.old_key')}\n              {': '}\n              <strong>{component.key}</strong>\n            </div>\n            <div className=\"spacer-top\">\n              {translate('update_key.new_key')}\n              {': '}\n              <strong>{newKey}</strong>\n            </div>\n          </>\n        }\n        modalHeader={translate('update_key.page')}\n        onConfirm={this.props.onKeyChange}>\n        {({ onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <input\n              className=\"input-super-large\"\n              id=\"update-key-new-key\"\n              onChange={this.handleChange}\n              placeholder={translate('update_key.new_key')}\n              required={true}\n              type=\"text\"\n              value={value}\n            />\n\n            <div className=\"spacer-top\">\n              <SubmitButton disabled={!hasChanged} id=\"update-key-submit\">\n                {translate('update_verb')}\n              </SubmitButton>\n\n              <Button\n                className=\"spacer-left\"\n                disabled={!hasChanged}\n                id=\"update-key-reset\"\n                onClick={this.handleReset}\n                type=\"reset\">\n                {translate('reset_verb')}\n              </Button>\n            </div>\n          </form>\n        )}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { withRouter, WithRouterProps } from 'react-router';\nimport UpdateForm from './UpdateForm';\nimport { changeKey } from '../../api/components';\nimport RecentHistory from '../../app/components/RecentHistory';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  component: Pick<T.Component, 'key' | 'name'>;\n}\n\nexport class Key extends React.PureComponent<Props & WithRouterProps> {\n  handleChangeKey = (newKey: string) => {\n    return changeKey({ from: this.props.component.key, to: newKey }).then(() => {\n      RecentHistory.remove(this.props.component.key);\n      this.props.router.replace({ pathname: '/project/key', query: { id: newKey } });\n    });\n  };\n\n  render() {\n    const { component } = this.props;\n    return (\n      <div className=\"page page-limited\" id=\"project-key\">\n        <Helmet title={translate('update_key.page')} />\n        <header className=\"page-header\">\n          <h1 className=\"page-title\">{translate('update_key.page')}</h1>\n          <div className=\"page-description\">{translate('update_key.page.description')}</div>\n        </header>\n        <UpdateForm component={component} onKeyChange={this.handleChangeKey} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Key);\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as ReactModal from 'react-modal';\nimport * as classNames from 'classnames';\n\nReactModal.setAppElement('#content');\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  size?: 'small' | 'medium' | 'large';\n  noBackdrop?: boolean;\n}\n\ntype MandatoryProps = Pick<ReactModal.Props, 'contentLabel'>;\n\ntype Props = Partial<ReactModal.Props> & MandatoryProps & ModalProps;\n\nexport default function Modal(props: Props) {\n  return (\n    <ReactModal\n      className={classNames('modal', {\n        'modal-small': props.size === 'small',\n        'modal-medium': props.size === 'medium',\n        'modal-large': props.size === 'large'\n      })}\n      isOpen={true}\n      overlayClassName={classNames('modal-overlay', { 'modal-no-backdrop': props.noBackdrop })}\n      {...props}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal, { ModalProps } from './Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props extends ModalProps {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    const { children, header, onClose, onSubmit, ...modalProps } = this.props;\n    return (\n      <Modal contentLabel={header} onRequestClose={onClose} {...modalProps}>\n        {children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ModalProps } from './Modal';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\nexport interface ConfirmModalProps<T> extends ModalProps {\n  cancelButtonText?: string;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  onConfirm: (data?: T) => void | Promise<void | Response>;\n}\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  header: string;\n  headerDescription?: React.ReactNode;\n  onClose: () => void;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const {\n      children,\n      confirmButtonText,\n      confirmDisable,\n      header,\n      headerDescription,\n      isDestructive,\n      cancelButtonText = translate('cancel')\n    } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n          {headerDescription}\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {cancelButtonText}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header, onClose, noBackdrop, size } = this.props;\n    const modalProps = { header, onClose, noBackdrop, size };\n    return (\n      <SimpleModal onSubmit={this.handleSubmit} {...modalProps}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmModal, { ConfirmModalProps } from './ConfirmModal';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\n\ninterface Props<T> extends ConfirmModalProps<T> {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  modalHeaderDescription?: React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton<T> extends React.PureComponent<Props<T>, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    const {\n      children,\n      modalBody,\n      modalHeader,\n      modalHeaderDescription,\n      ...confirmModalProps\n    } = this.props;\n    return (\n      <ConfirmModal\n        header={modalHeader}\n        headerDescription={modalHeaderDescription}\n        onClose={onClose}\n        {...confirmModalProps}>\n        {modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}