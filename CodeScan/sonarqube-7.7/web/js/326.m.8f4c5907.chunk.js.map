{"version":3,"sources":["webpack:///./src/main/js/apps/maintenance/components/SetupAppContainer.tsx","webpack:///./src/main/js/components/intl/DateFromNow.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/apps/maintenance/components/App.tsx","webpack:///./src/main/js/apps/maintenance/styles.css?6a28","webpack:///./src/main/js/apps/maintenance/styles.css"],"names":["__webpack_require__","r","__webpack_exports__","d","MaintenanceAppContainer","react__WEBPACK_IMPORTED_MODULE_0__","_App__WEBPACK_IMPORTED_MODULE_1__","props","Object","assign","setup","DateFromNow","react_intl__WEBPACK_IMPORTED_MODULE_1__","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","children","date","value","HealthType","setLogLevel","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","restartAndWait","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","level","catch","POLLING_INTERVAL","promiseStatus","Promise","resolve","pollStatus","cb","setTimeout","then","status","TimeFormatter","formatterOption","hour","minute","longFormatterOption","second","long","App","classnames__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","n","_api_system__WEBPACK_IMPORTED_MODULE_3__","_components_intl_DateFromNow__WEBPACK_IMPORTED_MODULE_4__","_components_intl_TimeFormatter__WEBPACK_IMPORTED_MODULE_5__","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","_components_common_InstanceMessage__WEBPACK_IMPORTED_MODULE_8__","_helpers_urls__WEBPACK_IMPORTED_MODULE_9__","_helpers_system__WEBPACK_IMPORTED_MODULE_10__","[object Object]","this","mounted","state","fetchStatus","fetchMigrationState","fetchSystemStatus","setState","message","undefined","startedAt","wasStarting","scheduleRefresh","loadPreviousPage","interval","window","setInterval","location","href","handleMigrateClick","clearInterval","_this$state","a","defaultTitle","className","id","panel-warning","dangerouslySetInnerHTML","__html","onClick","content","module","i","options","hmr","transform","insertInto","locals","exports","push"],"mappings":"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","file":"js/326.m.8f4c5907.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport App from './App';\n\ninterface Props {\n  location: { query: { return_to: string } };\n}\n\nexport default function MaintenanceAppContainer(props: Props) {\n  return <App setup={true} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedRelative } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n}\n\nexport default function DateFromNow({ children, date }: Props) {\n  return <FormattedRelative value={parseDate(date)}>{children}</FormattedRelative>;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport type SysValue = boolean | string | number | HealthType | SysValueObject | SysValueArray;\nexport interface SysValueObject {\n  [key: string]: SysValue;\n}\nexport interface SysValueArray extends Array<SysValue> {}\n\nexport interface SysInfoSection {\n  [sectionName: string]: SysValueObject;\n}\n\nexport enum HealthType {\n  RED = 'RED',\n  YELLOW = 'YELLOW',\n  GREEN = 'GREEN'\n}\n\nexport interface NodeInfo extends SysValueObject {\n  'Compute Engine Logging': { 'Logs Level': string };\n  Health: HealthType;\n  'Health Causes': string[];\n  Name: string;\n  'Web Logging': { 'Logs Level': string };\n}\n\nexport interface SysInfo extends SysValueObject {\n  Health: HealthType;\n  'Health Causes': string[];\n  System: {\n    'High Availability': boolean;\n    'Logs Level': string;\n    'Server ID': string;\n  };\n}\n\nexport interface ClusterSysInfo extends SysInfo {\n  'Application Nodes': NodeInfo[];\n  'Search Nodes': NodeInfo[];\n}\n\nexport interface SystemUpgrade {\n  version: string;\n  description: string;\n  releaseDate: string;\n  changeLogUrl: string;\n  downloadUrl: string;\n  plugins: any;\n}\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<SysInfo> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: string }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nconst POLLING_INTERVAL = 2000;\n\nfunction pollStatus(cb: Function): void {\n  setTimeout(() => {\n    getSystemStatus()\n      .then(r => {\n        if (r.status === 'UP') {\n          cb();\n        } else {\n          pollStatus(cb);\n        }\n      })\n      .catch(() => pollStatus(cb));\n  }, POLLING_INTERVAL);\n}\n\nfunction promiseStatus(): Promise<any> {\n  return new Promise(resolve => pollStatus(resolve));\n}\n\nexport function restartAndWait(): Promise<any> {\n  return restart().then(promiseStatus);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2019 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { getMigrationStatus, getSystemStatus, migrateDatabase } from '../../../api/system';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\nimport { getBaseUrl, getReturnUrl } from '../../../helpers/urls';\nimport { isSonarCloud } from '../../../helpers/system';\nimport '../styles.css';\n\ninterface Props {\n  location: { query: { return_to?: string } };\n  setup: boolean;\n}\n\ninterface State {\n  message?: string;\n  startedAt?: string;\n  state?: string;\n  status?: string;\n  wasStarting?: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  interval?: number;\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  fetchStatus = () => {\n    const request = this.props.setup ? this.fetchMigrationState() : this.fetchSystemStatus();\n    request.catch(() => {\n      if (this.mounted) {\n        this.setState({\n          message: undefined,\n          startedAt: undefined,\n          state: undefined,\n          status: 'OFFLINE'\n        });\n      }\n    });\n  };\n\n  fetchSystemStatus = () => {\n    return getSystemStatus().then(({ status }) => {\n      if (this.mounted) {\n        this.setState({ status });\n\n        if (status === 'STARTING') {\n          this.setState({ wasStarting: true });\n          this.scheduleRefresh();\n        } else if (status === 'UP') {\n          if (this.state.wasStarting) {\n            this.loadPreviousPage();\n          }\n        } else {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  fetchMigrationState = () => {\n    return getMigrationStatus().then(({ message, startedAt, state }) => {\n      if (this.mounted) {\n        this.setState({ message, startedAt, state });\n        if (state === 'MIGRATION_SUCCEEDED') {\n          this.loadPreviousPage();\n        } else if (state !== 'NO_MIGRATION') {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  scheduleRefresh = () => {\n    this.interval = window.setTimeout(this.fetchStatus, 5000);\n  };\n\n  loadPreviousPage = () => {\n    setInterval(() => {\n      window.location.href = getReturnUrl(this.props.location);\n    }, 2500);\n  };\n\n  handleMigrateClick = () => {\n    migrateDatabase().then(\n      ({ message, startedAt, state }) => {\n        if (this.mounted) {\n          this.setState({ message, startedAt, state });\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { state, status } = this.state;\n\n    return (\n      <>\n        <Helmet defaultTitle={translate('maintenance.page')} />\n        <div className=\"page-wrapper-simple\" id=\"bd\">\n          <div\n            className={classNames('page-simple', {\n              'panel-warning': state === 'MIGRATION_REQUIRED'\n            })}\n            id=\"nonav\">\n            {status === 'OFFLINE' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_offline')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <p className=\"maintenance-text\">\n                    {translate('maintenance.sonarqube_is_offline.text')}\n                  </p>\n                )}\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'UP' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_up')} />\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  {translate('maintenance.all_systems_opetational')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'STARTING' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_starting')} />\n                </h1>\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {status === 'DOWN' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  <InstanceMessage message={translate('maintenance.is_down')} />\n                </h1>\n                <p className=\"maintenance-text\">\n                  {translate('maintenance.sonarqube_is_down.text')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {(status === 'DB_MIGRATION_NEEDED' || status === 'DB_MIGRATION_RUNNING') && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  <InstanceMessage message={translate('maintenance.is_under_maintenance')} />\n                </h1>\n                {!isSonarCloud() && (\n                  <>\n                    <p\n                      className=\"maintenance-text\"\n                      dangerouslySetInnerHTML={{\n                        __html: translate('maintenance.sonarqube_is_under_maintenance.1')\n                      }}\n                    />\n                    <p\n                      className=\"maintenance-text\"\n                      dangerouslySetInnerHTML={{\n                        __html: translate('maintenance.sonarqube_is_under_maintenance.2')\n                      }}\n                    />\n                  </>\n                )}\n              </>\n            )}\n\n            {state === 'NO_MIGRATION' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_REQUIRED' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.upgrade_database')}</h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.1')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.2')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.3')}</p>\n                <div className=\"maintenance-spinner\">\n                  <Button id=\"start-migration\" onClick={this.handleMigrateClick}>\n                    {translate('maintenance.upgrade')}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            {state === 'NOT_SUPPORTED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.migration_not_supported')}\n                </h1>\n                <p>{translate('maintenance.migration_not_supported.text')}</p>\n              </>\n            )}\n\n            {state === 'MIGRATION_RUNNING' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.database_migration')}</h1>\n                {this.state.message && (\n                  <p className=\"maintenance-text text-center\">{this.state.message}</p>\n                )}\n                {this.state.startedAt && (\n                  <p className=\"maintenance-text text-center\">\n                    {translate('background_tasks.table.started')}{' '}\n                    <DateFromNow date={this.state.startedAt} />\n                    <br />\n                    <small className=\"text-muted\">\n                      <TimeFormatter date={this.state.startedAt} long={true} />\n                    </small>\n                  </p>\n                )}\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_SUCCEEDED' && (\n              <>\n                <h1 className=\"maintenance-title text-success\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_FAILED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.upgrade_failed')}\n                </h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_failed.text')}</p>\n              </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n * SonarQube\\n * Copyright (C) 2009-2019 SonarSource SA\\n * mailto:info AT sonarsource DOT com\\n *\\n * This program is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 3 of the License, or (at your option) any later version.\\n *\\n * This program is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Lesser General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public License\\n * along with this program; if not, write to the Free Software Foundation,\\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\\n */\\n.maintenance-title {\\n  margin-bottom: 40px;\\n  line-height: 1.5;\\n  font-size: 24px;\\n  font-weight: 300;\\n  text-align: center;\\n}\\n\\n.maintenance-text {\\n  margin-bottom: 16px;\\n  line-height: 1.5;\\n  font-size: 16px;\\n  font-weight: 300;\\n}\\n\\n.maintenance-spinner {\\n  margin-top: 40px;\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}